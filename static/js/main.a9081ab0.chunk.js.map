{"version":3,"sources":["components/sidenav/SideNav.js","components/About/About.js","components/SkillCard/SkillCard.js","components/Skills/Skills.js","components/ProjectCard/ProjectCard.js","components/Projects/Projects.js","components/sectioncontainer/SectionContainer.js","components/portfolio/Portfolio.js","constants/About.js","constants/Skills.js","constants/Projects.js","components/App.js","serviceWorker.js","index.js"],"names":["SideNav","handleSectionClick","className","onClick","About","bio","data","quote","SkillCard","skill","Skills","skills","industryKnowledge","map","techSkills","interpersonalSkills","ProjectCard","project","style","alignItems","fontVariant","name","description","href","link","target","Projects","projects","projectList","SectionContainer","selectedHeading","selectedQuote","selectedSection","about","Portfolio","heading","App","state","section","setState","this","position","params","fpsLimit","particles","number","value","size","shape","type","lineLinked","enable","color","interactivity","events","onHover","mode","parallax","force","smooth","modes","bubble","distance","duration","opacity","speed","emitters","quantity","detectRetina","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a9081ab0.chunk.js","sourcesContent":["import React from 'react';\n\nimport './sidenav.css';\n\nexport const SideNav = ({ handleSectionClick }) => {\n    return (\n        <div className=\"sidenav\">\n            <div className = \"face\">\n                <p className = \"content\">SSA</p>\n            </div>\n            <h2 className=\"main-name\">Sarfaraz Ahammed</h2>\n            <p className=\"subtitle\">\"Programming Addict\"</p>\n            <div className=\"sections-list\">\n                <p className=\"section-list-element\" onClick={() => handleSectionClick(\"about\")}>About Me</p>\n                <p className=\"section-list-element\" onClick={() => handleSectionClick(\"skills\")}>Skills</p>\n                <p className=\"section-list-element\" onClick={() => handleSectionClick(\"projects\")}>Projects</p>\n            </div>\n        </div>\n    );\n};","import React from 'react';\n\nimport './about.css';\n\nexport const About = ({ bio }) => {\n    return (\n        <div className=\"about-container\">\n            <p>{bio.data}</p>\n            <quote>{bio.quote}</quote>\n        </div>\n    )\n}","import React from 'react';\n\nimport './skill-card.css';\n\nexport const SkillCard = ({ skill }) => {\n    return (\n        <div className=\"skill-card\">\n            {skill}\n        </div>\n    )\n}","import React from 'react';\n\nimport { SkillCard } from '../SkillCard/SkillCard';\n\nimport './skills.css';\n\nexport const Skills = ({ skills }) => {\n    return (\n        <div className=\"skills-container\">\n            <h3>Industry Knowledge</h3>\n            <div className=\"industry-skill-container\">\n                {\n                    skills.industryKnowledge.map(skill => <SkillCard skill={skill} />)\n                }\n            </div>\n            <h3>Tech Skills</h3>\n            <div className=\"industry-skill-container\">\n                {\n                    skills.techSkills.map(skill => <SkillCard skill={skill} />)\n                }\n            </div>\n            <h3>Interpersonal Skills</h3>\n            <div className=\"industry-skill-container\">\n                {\n                    skills.interpersonalSkills.map(skill => <SkillCard skill={skill} />)\n                }\n            </div>\n            \n        </div>\n    )\n}","import React from 'react'\n\nimport './project-card.css';\n\nexport const ProjectCard = ({ project }) => {\n    return (\n        <div className=\"project-card\">\n            <center><p><b style={{alignItems: \"center\",fontVariant: \"petite-caps\"}}>{project.name}</b></p></center>\n            <p><b style={{fontVariant: \"petite-caps\"}}>Description:</b> {project.description}</p>\n            <p><b style={{fontVariant: \"petite-caps\"}}>Link:</b> <a href={project.link} target=\"blank\">{project.link}</a> </p>\n        </div>\n    )\n}","import React from 'react';\n\nimport { ProjectCard } from './../ProjectCard/ProjectCard';\n\nimport './projects.css';\n\nexport const Projects = ({ projects }) => {\n    return (\n        <div className=\"projects-container\">\n            <div className=\"industry-skill-container\">\n                {\n                    projects.projectList.map(project => <ProjectCard project={project} />)\n                }\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nimport { About } from './../About/About';\nimport { Skills } from './../Skills/Skills';\nimport { Projects } from './../Projects/Projects';\n\nimport './section-container.css';\n\nexport const SectionContainer = ({ \n    selectedHeading, \n    selectedQuote,\n    selectedSection,\n    about,\n    skills,\n    projects }) => {\n    return (\n        <div className=\"section-container\">\n            <div className=\"section-heading-container\">\n                <h2 className=\"main-heading\">{selectedHeading}</h2>\n                <p className=\"main-quote\">{selectedQuote}</p>\n            </div>\n            <div className=\"section-component\">\n                {\n                    {\n                        about: <About bio={about.bio} />,\n                        skills: <Skills skills={skills} />,\n                        projects: <Projects projects={projects} />\n                    }[selectedSection]\n                }\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nimport { SideNav } from './../sidenav/SideNav';\nimport { SectionContainer } from './../sectioncontainer/SectionContainer';\n\nimport './Portfolio.css';\n\nexport const Portfolio = ({ \n    handleSectionClick,\n    selectedHeading, \n    selectedQuote,\n    selectedSection,\n    about,\n    skills,\n    projects }) => {\n    return (\n        <div className=\"portfolio-container\">\n            <div className=\"sidenav-container\">\n                <SideNav\n                    handleSectionClick={handleSectionClick}\n                />\n            </div>\n            <div className=\"main-section-container\">\n                <SectionContainer\n                    selectedSection={selectedSection}\n\t\t\t\t\tselectedHeading={selectedHeading}\n\t\t\t\t\tselectedQuote={selectedQuote}\n\t\t\t\t\tabout={about}\n\t\t\t\t\tskills={skills}\n\t\t\t\t\tprojects={projects} />\n            </div>\n        </div>\n    );\n};","export const about = {\n    heading: \"About Me\",\n    \"quote\": \"Feels HAPPY when I make others HAPPY\",\n    \"bio\": {\n        data : \"A developer by passion, a tech enthusiast, a full-stack developer with Spring boot and React, motivator and mentor for those who want to learn programming, and recent technologies, Sarfaraz has been continuously helping the buds of India to achieve their dreams.\",\n        quote : \"Being educated is not enough, educating others define your life! - Sarfaraz\"\n    }\n};","export const skills = {\n    heading: \"Skills\",\n    quote: \"Hire for Character, Train for skills! - Michael Josephson \",\n    techSkills: [\n        \"Java\",\n        \"Python\",\n        \"Spring\",\n        \"Spring Boot\",\n        \"Spring Microservices\",\n        \"JavaScript\",\n        \"ReactJS\",\n        \"React Native\",\n        \"Redux\",\n        \"C++\",\n        \"C#\",\n        \"C\",\n        \"HTML\",\n        \"CSS\",\n        \"jQuery\",\n        \"Bootstrap\",\n        \"Git\",\n        \"GitHub\",\n        \"SQL\",\n        \"PostgreSQL\",\n        \"MongoDB\",\n    ],\n    industryKnowledge: [\n        \"Software\",\n        \"Web Content\",\n        \"Frontend\",\n        \"Backend\",\n        \"Design\",\n        \"Web\",\n        \"Android\"\n    ],\n    interpersonalSkills: [\n        \"Communication\",\n        \"Teaching\",\n        \"Time Management\",\n        \"Leadership\",\n        \"Management\",\n        \"Adaptability\"\n    ]\n};","export const projects = {\n    heading: \"Projects\",\n    quote: \"Implementation reflects your capability\",\n    projectList: [\n        {\n            name: \"Shot Mail\",\n            description: \"A simple mailing client to mail multiple persons with their specific data in one click.\",\n            link: \"https://github.com/sarfarazsyed/shotmail\"\n        },\n        {\n            name: \"Portfolio\",\n            description: \"A simple portfolio using JS.\",\n            link: \"https://syedsarfarazahammed.github.io\"\n        }\n    ]\n}","import React, { Component, Fragment } from 'react';\nimport './App.css';\nimport { Portfolio } from './portfolio/Portfolio';\nimport { about } from './../constants/About';\nimport { skills } from './../constants/Skills';\nimport { projects } from './../constants/Projects';\nimport ParticleComponent from 'react-particles-js';\nexport default class App extends Component {\n    state = {\n        selectedSection: \"\",\n        selectedHeading: \"\",\n        selectedQuote: \"\",\n        about: null,\n        skills: null,\n        projects: null,\n    };\n\n    componentWillMount() {\n        this.setState({\n            about,\n            skills,\n            projects,\n            selectedHeading: about.heading,\n            selectedQuote: about.quote,\n            selectedSection: \"about\"\n        });\n    }\n\n    handleSectionClick = (section) => {\n        this.setState({\n            selectedSection: section,\n            selectedHeading: this.state[section].heading,\n            selectedQuote: this.state[section].quote\n        })\n    }\n\n    render() {\n        return ( \n            <>\n                <ParticleComponent \n                    style= {{position: \"absolute\"}}\n                    params = {{\n                        fpsLimit: 120,\n                        particles: {\n                            number: {\n                                value: 70\n                            },\n                            size: {\n                                value: 2\n                            },\n                            shape: {\n                                type : \"triangle\"\n                            },\n                            lineLinked: {\n                                enable: false\n                            },\n                            color : {\n                                value: \"rgba(120,219,120)\"\n                            }\n                        },\n                        interactivity : {\n                            events: {\n                                onHover : {\n                                    enable :true,\n                                    mode: \"bubble\",\n                                    parallax: { \n                                        enable: false, \n                                        force: 2, \n                                        smooth: 10 \n                                    }\n                                },\n                                onClick : {\n                                    enable : true,\n                                    mode: \"push\"\n                                }\n                            },\n                            modes: {\n                                bubble: { \n                                    distance: 50,\n                                    duration: 2,\n                                    opacity: 1,\n                                    size: 3,\n                                    speed: 3 \n                                },  emitters:{\n                                    quantity: 2\n                                }\n                            }\n                        },\n                        detectRetina:true\n                    }}\n                />\n                <div className=\"App\"><Portfolio\n          handleSectionClick={this.handleSectionClick}\n          selectedSection={this.state.selectedSection}\n          selectedHeading={this.state.selectedHeading}\n          selectedQuote={this.state.selectedQuote}\n          about={this.state.about}\n          skills={this.state.skills}\n          projects={this.state.projects} /></div>\n                \n            </>\n        );\n        }\n    }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}